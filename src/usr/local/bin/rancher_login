#!/bin/bash

set -ex

if [[ -n "${RANCHER_URL}" ]] && [[ -n "${RANCHER_TOKEN}" ]] && [[ "${RANCHER_CLUSTER}" ]]; then

  # do not overwrite current KUBECONFIG if run locally
  export KUBECONFIG=/tmp/deploy-kube-config
  touch $KUBECONFIG && chmod go-rwx $KUBECONFIG

  # needs a fully qualified certificate, otherwise it will prompt for input
  echo 1 | rancher login "${RANCHER_URL}" --token "${RANCHER_TOKEN}"

  # retrieve kube config for specific cluster and save to a local file
  rancher cluster kubeconfig "${RANCHER_CLUSTER}" > ${KUBECONFIG}

  # retrieve specific namespace project ID, in this case 'default'
  CONTEXT_ID=$(kubectl get ns default -o jsonpath="{.metadata.annotations.field\.cattle\.io/projectId}")

  # login using using specific cluster and retrieved project ID as context
  rancher login ${RANCHER_URL} --token ${RANCHER_TOKEN} --name ${RANCHER_CLUSTER} --context "${CONTEXT_ID}"

 KUBE_CONTEXT="${RANCHER_CLUSTER}"
else
  echo "## One of RANCHER_(URL|TOKEN|CLUSTER) missing, login to rancher failed"
  echo "In order to deploy to Rancher, those variables are needed."
fi

include:
  - project: 'strowi/ci-templates'
    file: '/build.yml'
  - project: 'strowi/ci-templates'
    file: '/tests.yml'
  - project: 'strowi/ci-templates'
    file: '/k3d.yml'

stages:
  - build
  - test
  - release


# "build_image"                        -> "${CI_REGISTRY_IMAGE}"
# "build_image $sub_image ./sub_dir/"  -> "${CI_REGISTRY_IMAGE}/sub_name
# always tagged + pushed with:release
#   - ":${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}"
#   - ":${CI_COMMIT_REF_SLUG}"
#   - ":latest" (NOT pushed, for building dependent images)
docker:build:
  extends: .build
  stage: build
  script:
    - build_image

container_scanning:
  extends: .container_scanning
  # parallel:
  #   matrix:
  #     - SUB_IMAGE_NAME:
  #       - /xyz

dgoss:test:
  extends: .dgoss
  script:
    - dgoss_run ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA} sleep 5s

# "release_latest"                      -> "${CI_REGISTRY_IMAGE}"
# "release_latest./sub_dir/"            -> "${CI_REGISTRY_IMAGE}/sub_name
# push current "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}" as ":latest"
release:
  extends: .build
  stage: release
  script:
    - release_latest
    - echo $DOCKER_TOKEN | docker login -u strowi --password-stdin
    - crane copy "$CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}" "strowi/$CI_PROJECT_NAME:latest"
  only:
    - master

deploy-tests:
  stage: test
  extends: .k3d
  variables:
    DRY_RUN: true
  script:
    - start_k3d
    - deploy-k8
    - get_pod nginx-krane
    - deploy-helm
    - get_pod nginx-helm
    - kubectl get deploy,po --all-namespaces
  parallel:
    matrix:
      - K3S_VERSION:
        - v1.25.10-k3s1
